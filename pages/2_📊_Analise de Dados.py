import streamlit as st
import pandas as pd
import plotly.express as px
import numpy as np
from scipy.stats import t, norm
import plotly.graph_objects as go

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="An√°lise da Expectativa de Vida", layout="wide")

# T√≠tulo principal
st.title("üåç An√°lise da Expectativa de Vida Mundial")

# Introdu√ß√£o
st.markdown("""
### üìä Contexto do Projeto
Este projeto explora a **expectativa de vida mundial**, investigando fatores socioecon√¥micos, de sa√∫de e pol√≠ticas p√∫blicas que impactam a longevidade. A an√°lise √© baseada em dados hist√≥ricos e busca responder duas perguntas principais:

1. **Quais regi√µes t√™m os menores e maiores √≠ndices de longevidade em 2015?**
2. **Qual √© a rela√ß√£o entre vacina√ß√£o e longevidade?**
""")

# Carregamento de dados
@st.cache_data
def load_data():
    df = pd.read_csv("LifeExpectancy.csv")
    return df

df = load_data()

# Pergunta 1: Quais regi√µes t√™m os menores e maiores √≠ndices de longevidade em 2015?
st.markdown("### üß≠ Quais regi√µes t√™m os menores e maiores √≠ndices de longevidade em 2015?")
st.markdown("*Utilizando os dados mais recentes do dataset.*")

def process_data(df):
    df_2015 = df[df['Year'] == 2015]
    selected_df = df_2015[['Country', 'Life expectancy', 'Adult Mortality', 'infant deaths', 'Population']]
    grouped_df = selected_df.groupby('Country', as_index=False).mean()
    top_long_life = grouped_df.nlargest(10, 'Life expectancy')
    bottom_long_life = grouped_df.nsmallest(10, 'Life expectancy')
    final_df = pd.concat([top_long_life, bottom_long_life]).reset_index(drop=True)
    return final_df

processed_df = process_data(df)
st.subheader("üåê Top 10 Maiores e Menores Expectativas de Vida (2015)")
st.dataframe(processed_df)

st.markdown("""
Pa√≠ses como **Jap√£o**, **Su√≠√ßa** e **Su√©cia** lideram com expectativa de vida acima de 82 anos, indicando boa estrutura de sa√∫de, saneamento e educa√ß√£o. 
J√° pa√≠ses como **Serra Leoa**, **Chade** e **Angola** apresentam expectativa de vida abaixo de 55 anos, refletindo car√™ncia em servi√ßos b√°sicos.
""")

# Pergunta 2: Qual √© a rela√ß√£o entre vacina√ß√£o e longevidade?
st.markdown("### üíâ Qual √© a rela√ß√£o entre vacina√ß√£o e longevidade?")

def get_top_bottom_life_expectancy(df):
    df_2015 = df[df['Year'] == 2015]
    columns = ['Country', 'Life expectancy', 'Hepatitis B', 'Polio', 'Diphtheria']
    filtered_df = df_2015[columns]
    grouped = filtered_df.groupby('Country', as_index=False).mean(numeric_only=True)
    top5 = grouped.nlargest(5, 'Life expectancy').reset_index(drop=True)
    bottom5 = grouped.nsmallest(5, 'Life expectancy').reset_index(drop=True)
    return top5, bottom5

def show_vaccination_life_expectancy():
    top5, bottom5 = get_top_bottom_life_expectancy(df)

    st.subheader("üîù Top 5 Pa√≠ses com Maior Expectativa de Vida e Taxas de Vacina√ß√£o")
    st.dataframe(top5)

    st.subheader("üîª Bottom 5 Pa√≠ses com Menor Expectativa de Vida e Taxas de Vacina√ß√£o")
    st.dataframe(bottom5)

    st.markdown("""
Observamos que pa√≠ses com **maior expectativa de vida** tamb√©m apresentam **altas taxas de vacina√ß√£o**, especialmente contra doen√ßas como **Poliomielite**, **Difteria** e **Hepatite B**.
J√° pa√≠ses com **baixa longevidade** geralmente t√™m **√≠ndices vacinais abaixo da m√©dia**, o que contribui para altas taxas de mortalidade infantil e adulta.
""")

show_vaccination_life_expectancy()

# Intervalo de Confian√ßa
def show_confidence_interval(df):
    st.subheader("üìè Intervalo de Confian√ßa da Expectativa de Vida")
    st.markdown("""
Para refor√ßar nossa an√°lise estat√≠stica, calculamos o **intervalo de confian√ßa de 95%** da m√©dia global de expectativa de vida:
""")
    life_expectancy = df["Life expectancy"].dropna()
    mean_life = np.mean(life_expectancy)
    std_life = np.std(life_expectancy, ddof=1)
    n = len(life_expectancy)
    sem = std_life / np.sqrt(n)
    confidence_interval = t.interval(0.95, df=n-1, loc=mean_life, scale=sem)

    fig = go.Figure()
    x = np.linspace(mean_life - 4*std_life, mean_life + 4*std_life, 1000)
    y = norm.pdf(x, mean_life, std_life)
    fig.add_trace(go.Scatter(x=x, y=y, mode='lines', name='Distribui√ß√£o Normal', line=dict(color='#1f77b4', width=2)))
    fig.add_trace(go.Scatter(x=[confidence_interval[0], confidence_interval[1]],
                              y=[0, 0], mode='lines', name='Intervalo de Confian√ßa', line=dict(color='red', dash='dash')))
    fig.update_layout(title="Distribui√ß√£o da Expectativa de Vida com Intervalo de Confian√ßa de 95%",
                      xaxis_title="Expectativa de Vida (anos)", yaxis_title="Densidade de Probabilidade",
                      template="plotly_white")
    st.plotly_chart(fig)

    st.write(f"**M√©dia da Expectativa de Vida:** {mean_life:.2f} anos")
    st.write(f"**Intervalo de Confian√ßa de 95%:** [{confidence_interval[0]:.2f}, {confidence_interval[1]:.2f}] anos")

show_confidence_interval(df)

# Finaliza√ß√£o
st.markdown("""
### üìù Conclus√£o
A partir das an√°lises, observamos que **fatores como vacina√ß√£o, mortalidade infantil e acesso a recursos b√°sicos** est√£o diretamente ligados √† expectativa de vida das popula√ß√µes. 
Esses insights ajudam a direcionar pol√≠ticas p√∫blicas e a√ß√µes de sa√∫de para regi√µes com maior vulnerabilidade.
""")
