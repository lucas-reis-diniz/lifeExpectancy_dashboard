import streamlit as st
import pandas as pd
import plotly.express as px
import numpy as np
from scipy.stats import t, norm
import plotly.graph_objects as go

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="An√°lise Explorat√≥ria", layout="wide")

# T√≠tulo principal
st.title("üåç An√°lise Explorat√≥ria dos Dados")

# Introdu√ß√£o
st.markdown("""
### üìä Explore os Dados!
            Nessa p√°gina voc√™ poder√° explorar todos os dados obtidos atrav√©s do nosso banco de dados. Selecione pa√≠ses e categorias de sua escolha para fazer a an√°lise!
""")

# Carregamento de dados
@st.cache_data
def load_data():
    df = pd.read_csv("LifeExpectancy.csv")
    return df

df = load_data()

# Distribui√ß√£o da Expectativa de Vida
st.subheader("üìä Distribui√ß√£o da Expectativa de Vida")
st.markdown("""
Este gr√°fico mostra como a expectativa de vida est√° distribu√≠da globalmente.
""")
fig = px.histogram(df, x="Life expectancy", nbins=30, title="Histograma da Expectativa de Vida",
                   labels={"Life expectancy": "Expectativa de Vida"}, opacity=0.7, marginal="box")
st.plotly_chart(fig)

st.write("(Adicionar texto explicando os dados fora do padr√£o apresentado)")

# An√°lise por pa√≠s
st.subheader("üåé Evolu√ß√£o da Expectativa de Vida por Pa√≠s")
country = st.selectbox("Selecione um pa√≠s:", df["Country"].unique())
df_country = df[df["Country"] == country]
fig = px.line(df_country, x="Year", y="Life expectancy", markers=True,
              title=f"Expectativa de vida ao longo dos anos em {country}",
              labels={"Life expectancy": "Expectativa de Vida", "Year": "Anos"})
st.plotly_chart(fig)

# Sele√ß√£o de an√°lise personalizada
st.subheader("üìå An√°lises Relacionadas")
st.markdown("""
Selecione abaixo as perguntas que deseja responder com os dados.
""")
options = st.multiselect(
    "Escolha as an√°lises:",
    ["Correla√ß√£o entre PIB e Expectativa de Vida", "Impacto da Vacina√ß√£o na Expectativa de Vida", "Distribui√ß√£o de Doen√ßas por Regi√£o"]
)

if "Correla√ß√£o entre PIB e Expectativa de Vida" in options:
    st.subheader("üí∞ Expectativa de Vida vs. PIB")
    st.markdown("""
    Aqui exploramos a rela√ß√£o entre o Produto Interno Bruto (PIB) e a expectativa de vida. A tend√™ncia geralmente mostra que pa√≠ses com maior PIB t√™m uma popula√ß√£o com maior longevidade.
    """)
    fig = px.scatter(df, x="GDP", y="Life expectancy", trendline="ols",
                     title="Rela√ß√£o entre PIB e Expectativa de Vida",
                     labels={"GDP": "PIB", "Life expectancy": "Expectativa de Vida"})
    st.plotly_chart(fig)

if "Impacto da Vacina√ß√£o na Expectativa de Vida" in options:
    st.subheader("üíâ Impacto da Vacina√ß√£o na Expectativa de Vida")
    vaccine = st.selectbox("Escolha uma vacina:", ["Hepatitis B", "Polio", "Diphtheria"])
    st.markdown(f"""
    Analisamos como a vacina√ß√£o contra {vaccine} influencia a expectativa de vida. Pa√≠ses com altas taxas de vacina√ß√£o geralmente apresentam melhores √≠ndices de longevidade.
    """)
    fig = px.scatter(df, x=vaccine, y="Life expectancy", trendline="ols",
                     title=f"Rela√ß√£o entre {vaccine} e Expectativa de Vida",
                     labels={vaccine: "Taxa de Vacina√ß√£o (%)", "Life expectancy": "Expectativa de Vida"})
    st.plotly_chart(fig)

if "Distribui√ß√£o de Doen√ßas por Regi√£o" in options:
    st.subheader("ü¶† Distribui√ß√£o de Doen√ßas por Regi√£o")
    disease = st.selectbox("Selecione uma doen√ßa:", ["Hepatitis B", "Measles ", "Polio", "Diphtheria ", "HIV/AIDS", "infant deaths", "under-five deaths "])
    st.markdown(f"""
    A an√°lise abaixo mostra a distribui√ß√£o da doen√ßa **{disease}** em diferentes pa√≠ses ao longo dos anos.
    """)
    fig = px.choropleth(
        df.dropna(subset=["Country", disease]),
        locations="Country", locationmode="country names",
        color=disease, hover_name="Country", animation_frame="Year",
        color_continuous_scale="Reds",
        title=f"Distribui√ß√£o de {disease} ao longo dos anos"
    )
    st.plotly_chart(fig)

# Intervalo de Confian√ßa
st.subheader("üìè Intervalo de Confian√ßa da Expectativa de Vida")
st.markdown("""
Utilizamos um intervalo de confian√ßa de 95% para estimar onde a verdadeira m√©dia da expectativa de vida se encontra.
""")
life_expectancy = df["Life expectancy"].dropna()
mean_life = np.mean(life_expectancy)
std_life = np.std(life_expectancy, ddof=1)
n = len(life_expectancy)
sem = std_life / np.sqrt(n)
confidence_interval = t.interval(0.95, df=n-1, loc=mean_life, scale=sem)

fig = go.Figure()
x = np.linspace(mean_life - 4*std_life, mean_life + 4*std_life, 1000)
y = norm.pdf(x, mean_life, std_life)
fig.add_trace(go.Scatter(x=x, y=y, mode='lines', name='Distribui√ß√£o Normal', line=dict(color='#1f77b4', width=2)))
fig.add_trace(go.Scatter(x=[confidence_interval[0], confidence_interval[1]],
                          y=[0, 0], mode='lines', name='Intervalo de Confian√ßa', line=dict(color='red', dash='dash')))
fig.update_layout(title="Distribui√ß√£o da Expectativa de Vida com Intervalo de Confian√ßa de 95%",
                  xaxis_title="Expectativa de Vida (anos)", yaxis_title="Densidade de Probabilidade",
                  template="plotly_white")
st.plotly_chart(fig)

st.write(f"**M√©dia da Expectativa de Vida:** {mean_life:.2f} anos")
st.write(f"**Intervalo de Confian√ßa de 95%:** [{confidence_interval[0]:.2f}, {confidence_interval[1]:.2f}] anos")

st.write("Caculo para o intervalo de confian√ßa com 95% de certeza com base nos dados")
